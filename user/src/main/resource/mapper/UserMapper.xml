<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
	例如namespace="com.szh.mapper.personMapper"就是com.szh.mapper(包名)+personMapper(personMapper.xml文件去除后缀) -->
<mapper namespace="com.fh.mapper.UserMapper">

    <sql id="whereSql">
        <!--
              作用:1.自动在SQL语句后拼上where关键字
                   2.自动去掉第一个查询条件前面的and
          -->
        <where>
            <if test="userName != null and userName != '' ">
                and userName like concat('%',#{userName},'%')
            </if>
            <if test="sex != null ">
                and sex =#{sex}
            </if>
            <if test="minRegisterTime != null">
                <![CDATA[
              and registerTime >= #{minRegisterTime}
              ]]>
            </if>
            <if test="maxRegisterTime != null">
                <![CDATA[
              and registerTime <= #{maxRegisterTime}
              ]]>
            </if>
        </where>
    </sql>

    <select id="queryAreaList" resultType="area">

        select * from t_area

    </select>


    <select id="queryUserList" parameterType="userQuery" resultType="user">
        select tx.*,concat(ta2.areaName,concat(',',ta.areaName)) as areaName from t_user tx
        left join t_area ta on tx.areaId = ta.areaId
        left join t_area ta2 on ta.pid = ta2.areaId
        <include refid="whereSql"></include>
        limit #{start},#{length}
    </select>


    <select id="queryUserCount" parameterType="userQuery" resultType="long">
        select count(*) from t_user
        <include refid="whereSql"></include>
    </select>

    <insert id="addUser" parameterType="user" useGeneratedKeys="true" keyProperty="id">
        insert into t_user(userName,password,sex,
                            areaId,registerTime
                            )
        VALUES
        (
            #{userName},#{password},#{sex},
            #{areaId},#{registerTime}
        )
    </insert>

    <update id="updateUser" parameterType="user">
        update t_user set
            userName=#{userName},
            password=#{password},sex=#{sex},areaId=#{areaId},registerTime=#{registerTime}
          where id=#{id}
    </update>

    <select id="getUserById" parameterType="int" resultType="user">
        select tx.*,ta.pid "areaPid" from t_user tx
        left join t_area ta on tx.areaId = ta.areaId
        where tx.id = #{id}
    </select>

    <delete id="deleteUser" parameterType="int">
        delete from t_user where id = #{id}
    </delete>



    <delete id="batchDeleteUser" parameterType="java.util.List">
        delete from t_user where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="queryAreaListByPid" parameterType="int" resultType="Area">
        select * from t_area where pid = #{pid}
    </select>




</mapper>